!function(root,factory){"function"==typeof define&&define.amd?define(factory):"object"==typeof exports?module.exports=factory():root.Knobs=factory()}(this,(function(){if(!window.CSS||!CSS.supports("top","var(--a)"))return function(){};function mergeDeep(...objects){const isObject=obj=>obj&&"object"==typeof obj;return objects.reduce(((prev,obj)=>(Object.keys(obj).forEach((key=>{var pVal=prev[key],oVal=obj[key];Array.isArray(pVal)&&Array.isArray(oVal)?prev[key]=pVal.concat(...oVal):prev[key]=isObject(pVal)&&isObject(oVal)?mergeDeep(pVal,oVal):oVal})),prev)),{})}var raf=window.requestAnimationFrame||(cb=>window.setTimeout(cb,1e3/60));function Knobs(settings){settings&&(this.settings=mergeDeep({},this._defaults,{appendTo:document.body},settings),this.DOM={},this.build())}return Knobs.prototype={_types:["range","color","checkbox","text"],_defaults:{visible:0,live:!0,theme:{styles:"",RTL:!1,position:"top right",backgroud:"rgba(0,0,0,1)",textColor:"white",border:"none",light:{color1:"rgba(255,255,255,.1)",textColor:"white"}}},styles(){return"light"==this.settings.theme.mode&&Object.assign(this.settings.theme,this.settings.theme.light),function(theme){var s,{backgroud:backgroud,textColor:textColor,border:border,...th}=theme;return`\n    label, button, input{ cursor:pointer; font-family:Arial, sans-serif; }\n\n    body, form{ padding:0; margin:0; }\n\n    ${function(theme){var{backgroud:backgroud,textColor:textColor,...th}=theme;return"\n    /* bottom controls (apply/reset) */\n    .knobs__controls {\n      text-align: right;\n      padding: 0 12px 12px;\n    }\n\n    .knobs__controls > input {\n      color: black;\n      margin-left: 1em;\n    }\n  "}(theme)}\n\n    #knobsToggle:checked ~ * {\n      transform: none;\n      transition: calc(var(--in-duration) * 1s) var(--in-easing);\n    }\n\n    #knobsToggle:checked ~ * fieldset {\n      transform: none;\n      opacity: 1;\n      transition: calc(var(--in-duration) * 1s) calc(var(--in-duration) * .5s) ease-out;\n    }\n\n    .knobs {\n      --knobs-gap: 3px;\n      --in-easing: cubic-bezier(.75,0,.35,1);\n      --in-duration: .3;\n      --LTR-Bool: 1;  /* -1 for RTL */\n\n      font: 13px/1 'Fira Sans Condensed', sans-serif;\n      color: ${textColor};\n      position: fixed;\n      z-index: 999999;\n      top: 0;\n      right: 0;\n\n      ${theme.RTL&&"\n        direction: rtl;\n      "}\n    }\n\n    ${s=pos=>`.knobs[data-position~='${pos}']`,`\n      ${s("bottom")} > label{ top: 0; }\n\n      ${s("bottom")}[data-position~='right'] .knobs__controls{\n        padding-right: 40px;\n      }\n\n      ${s("bottom")} #knobsToggle:checked + label{\n        top: auto;\n        bottom: 10px;\n      }\n    \n      ${s("left")}{ --LTR-Bool: -1; }\n\n      ${s("left")} > label{ right: 3px; }\n\n      ${s("left")} #knobsToggle:checked + label{\n        left:10px; right:auto;\n      }\n\n      ${s("left")} .knobs__controls > :first-child:not(:only-child){ margin-left: 40px; }\n    `}\n\n    .knobs label {\n      user-select: none;\n      cursor: pointer;\n    }\n\n    /* show/hide icon */\n    .knobs > label {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      font-size: 20px;\n      line-height: 1;\n      z-index: 999;\n    }\n\n    /* the <form> element */\n    .knobs__labels {\n      background: ${backgroud};\n      border: ${border};\n      transform: translateX(calc(100% * var(--LTR-Bool)));\n    }\n\n    .knobs__labels fieldset {\n      display: table;\n      border: 0;\n      padding: 0;\n      margin: 0;\n      padding: 30px 12px 12px;\n      opacity: 0;\n      transform: translateX(calc(15% * var(--LTR-Bool)));\n    }\n\n    .knobs__seperator{\n      display: flex;\n      align-items: center;\n      margin: 1.2em 0 .7em;\n      font-weight: 500;\n    }\n\n    .knobs__seperator::before,\n    .knobs__seperator::after{\n      content: '';\n      height: 1px;\n      background: ${textColor};\n      flex: 1;\n      opacity: .25;\n    }\n\n    .knobs__labels hr{\n      border: 0;\n      border-top: 1px solid ${textColor};\n      opacity: .25;\n    }\n\n    .knobs__knob{\n      display: flex;\n      position: relative;\n    }\n\n    .knobs__knob__reset{\n      margin-right: 5px;\n      color: inherit;\n      background: none;\n      border: 0;\n      padding: 0;\n      cursor: pointer;\n      opacity: 0;\n      margin-left: -10px;\n      transition: .1s;\n      outline: none;\n    }\n\n    .knobs__label::after{\n      content: attr(data-type);\n      opacity: .5;\n      margin-left: 1ch;\n    }\n\n    .knobs__knob:hover .knobs__knob__reset{ opacity: .4; }\n    .knobs__knob:hover .knobs__knob__reset:hover{ opacity:1; }\n\n    .knobs__labels label {\n      flex: 1;\n      display: flex;\n\n    }\n\n    .knobs__labels label > * {\n      padding: var(--knobs-gap, 6px) 0;\n    }\n\n    .knobs__labels .range,\n    .knobs__labels input[type=text] {\n      min-width: 200px;\n    }\n\n    /* label's test only */\n    .knobs__label {\n      margin-right: 2ch;\n      white-space: nowrap;\n      display: flex;\n      align-items: center;\n      ${theme.RTL&&"\n        margin-right: auto;\n        margin-left: 2ch;\n      "}\n    }\n\n    .knobs__labels label > :last-child {\n      flex: 1;\n      text-align: right;\n      ${theme.RTL&&"\n        text-align: left;\n      "}\n    }\n\n    input[type="color"]{\n      -webkit-appearance: none;\n      appearance: none;\n      border: 0;\n      padding: 0;\n      border-radius: 50%;\n      width: 50px;\n      height: 20px;\n      background: none;\n      cursor: pointer;\n    }\n\n    \n    /* override-styles */\n    .knobs .range {\n      --primaryColor: #0366D6;\n      --value-active-color: white;\n      --value-background: tomato;\n      --progress-color: #EEE;\n      --thumb-size: 20px;\n      --track-height: calc(var(--thumb-size)/2.5);\n      --thumb-shadow: 0 0 3px rgba(0,0,0,.2);\n      --ticks-thickness: 1px;\n      --ticks-height: 0px;\n    }\n\n    .range {\n      --primaryColor: #0366D6;\n      --value-active-color: white;\n      --value-background: white;\n      --value-font: 700 12px/1 Arial;\n      --progress-color: #EEE;\n      --progress-shadow: 2px 2px 4px rgba(0,0,0, .1) inset;\n      --fill-color: var(--primaryColor);\n      --thumb-size: 16px;\n      --track-height: calc(var(--thumb-size)/2);\n      --thumb-shadow: 0 0 3px rgba(0,0,0,.2);\n      --ticks-thickness: 1px;\n      --ticks-height: 5px;\n      --ticks-color: silver;\n      --step: 1;\n      --ticks-count: (var(--max) - var(--min)) / var(--step);\n      --maxTicksAllowed: 30;\n      --too-many-ticks: Min(1, Max(var(--ticks-count) - var(--maxTicksAllowed), 0));\n      --x-step: Max( var(--step), var(--too-many-ticks) * (var(--max) - var(--min)) );\n      --tickInterval: 100/((var(--max) - var(--min)) / var(--step)) * var(--tickEvery, 1);\n      --tickIntervalPerc: calc((100% - var(--thumb-size))/( (var(--max) - var(--min)) / var(--x-step) ) * var(--tickEvery, 1));\n      --completed: calc((var(--value) - var(--min) ) / (var(--max) - var(--min)) * 100);\n      --LTR: 1;\n      display: inline-block;\n      height: max(var(--track-height), var(--thumb-size));\n      background: linear-gradient(to right, var(--ticks-color) var(--ticks-thickness), transparent 1px) repeat-x;\n      background-size: var(--tickIntervalPerc) var(--ticks-height);\n      background-position-x: calc(var(--thumb-size)/2);\n      background-position-y: var(--flip-y, bottom);\n      position: relative;\n      z-index: 1;\n      padding-bottom: var(--flip-y, var(--ticks-height));\n      padding-top: calc(var(--flip-y) * var(--ticks-height));\n    }\n    [dir=rtl] .range {\n      --LTR: -1;\n    }\n    .range[data-ticks-position=top] {\n      --flip-y: 1;\n    }\n    .range::before, .range::after {\n      --offset: calc(var(--thumb-size)/2);\n      content: counter(x);\n      font: 12px Arial;\n      position: absolute;\n      bottom: var(--flip-y, -2.5ch);\n      top: calc(-2.5ch * var(--flip-y));\n      opacity: var(--min-max-opacity, 0.5);\n      pointer-events: none;\n    }\n    .range::before {\n      counter-reset: x var(--min);\n      left: var(--offset);\n      transform: translateX(calc(-50% * var(--LTR)));\n    }\n    [dir=rtl] .range::before {\n      left: auto;\n      right: var(--offset);\n    }\n    .range::after {\n      counter-reset: x var(--max);\n      right: var(--offset);\n      transform: translateX(calc(50% * var(--LTR)));\n    }\n    [dir=rtl] .range::after {\n      right: auto;\n      left: var(--offset);\n    }\n    .range__progress {\n      position: absolute;\n      left: 0;\n      top: calc(50% - var(--ticks-height)/2);\n      transform: var(--flip-y, translateY(-50%) translateZ(0));\n      width: 100%;\n      height: calc(var(--track-height));\n      pointer-events: none;\n      z-index: -1;\n      box-shadow: var(--progress-shadow);\n      border-radius: 20px;\n      background: var(--fill-color, white);\n    }\n    .range__progress::after {\n      content: "";\n      display: block;\n      margin-left: auto;\n      margin-right: -1px;\n      width: calc((100% - var(--completed) * 1%) + (var(--completed)/100) * var(--thumb-size));\n      height: 100%;\n      background: var(--progress-color, #EEE);\n      box-shadow: inherit;\n      border-radius: 0 20px 20px 0;\n    }\n    [dir=rtl] .range__progress::after {\n      margin-right: auto;\n      margin-left: -1px;\n      border-radius: 20px 0 0 20px;\n    }\n    .range > input {\n      -webkit-appearance: none;\n      width: 100%;\n      height: var(--thumb-size);\n      margin: 0;\n      cursor: -webkit-grab;\n      cursor: grab;\n      outline: none;\n      background: none;\n    }\n    .range > input::-webkit-slider-thumb {\n      appearance: none;\n      height: var(--thumb-size);\n      width: var(--thumb-size);\n      border-radius: 50%;\n      background: var(--thumb-color, white);\n      border: 1px solid silver;\n      box-shadow: var(--inner-shadow, 0 0), var(--thumb-shadow);\n    }\n    .range > input::-moz-slider-thumb {\n      appearance: none;\n      height: var(--thumb-size);\n      width: var(--thumb-size);\n      border-radius: 50%;\n      background: var(--thumb-color, white);\n      border: 1px solid silver;\n      box-shadow: var(--inner-shadow, 0 0), var(--thumb-shadow);\n    }\n    .range > input::-ms-thumb {\n      appearance: none;\n      height: var(--thumb-size);\n      width: var(--thumb-size);\n      border-radius: 50%;\n      background: var(--thumb-color, white);\n      border: 1px solid silver;\n      box-shadow: var(--inner-shadow, 0 0), var(--thumb-shadow);\n    }\n    .range > input:active {\n      cursor: grabbing;\n      --thumb-color: var(--fill-color);\n      --inner-shadow: 0 0 0 calc(var(--thumb-size)/4) inset white;\n    }\n    .range > input:active + output {\n      transition: 0s;\n    }\n    .range > input:hover + output {\n      --value-background: var(--primaryColor);\n      color: var(--value-active-color);\n      transform: translate(var(--x-offset), 0);\n      box-shadow: 0 0 0 3px var(--value-background);\n    }\n    .range > output {\n      --x-offset: calc(var(--completed) * -1% * var(--LTR));\n      --pos: calc(((var(--value) - var(--min))/(var(--max) - var(--min))) * 100%);\n      pointer-events: none;\n      position: absolute;\n      z-index: 5;\n      background: var(--value-background);\n      border-radius: 10px;\n      padding: 0 4px;\n      top: -3ch;\n      left: var(--pos);\n      transform: translate(var(--x-offset), 6px);\n      transition: all 0.12s ease-out, left 0s, top 0s;\n    }\n    [dir=rtl] .range > output {\n      left: auto;\n      right: var(--pos);\n    }\n    .range > output::after {\n      content: var(--text-value);\n      font: var(--value-font);\n    }\n  \n    ${theme.styles}\n  `}(this.settings.theme)},parseHTML:s=>(new DOMParser).parseFromString(s.trim(),"text/html").body.firstElementChild,templates:{scope:function(){const{visible:visible,knobs:knobs,live:live}=this.settings;return`\n          <aside class='knobs' data-position='${this.settings.theme.position}'>\n            <input hidden type='checkbox' ${visible?"checked":""} id='knobsToggle' />\n            <label title='Demo Settings' ${2==visible?"style='display:none'":""} for='knobsToggle'>⚙️</label>\n            <form class='knobs__labels'>\n              <fieldset>\n              ${knobs.map(this.templates.knob.bind(this)).join("")}\n              ${this.templates.knob.call(this)}\n              </fieldset>\n              <section class='knobs__controls'>\n                <input type="reset" value="Reset">\n                ${live?"":'<input type="submit" value="Apply">'}\n              </section>\n            </form>\n          </aside>\n        `},knob:function(data){return data&&data.type?`<div class='knobs__knob'>\n              <button type='button' name='${data.__name}' class='knobs__knob__reset' title='reset'>↩</button>\n              <label>\n                <div class='knobs__label' ${data.cssVar&&data.cssVar[1]?`data-type='${data.cssVar[1]}'`:""}>${data.label}</div>\n                <div>\n                  ${"range"==data.type?`\n                  <div class="range" style="--step:${data.step||1}; --min:${data.min}; --max:${data.max}; --value:${data.value}; --text-value:'${data.value}'">\n                    <input type="range" ${this.knobAttrs(data)} oninput="this.parentNode.style.setProperty('--value',this.value); this.parentNode.style.setProperty('--text-value', JSON.stringify(this.value))">\n                    <output></output>\n                    <div class='range__progress'></div>\n                  </div>`:`<input type='${data.type}' ${this.knobAttrs(data)}>`}\n                </div>\n              </label>\n            </div>\n          `:data&&"string"==typeof data?`<div class='knobs__seperator'>&nbsp;&nbsp;${data}&nbsp;&nbsp;</div>`:"<hr/>"}},knobAttrs(data){var attributes=`name="${data.__name}"`,blacklist=["label","type","onchange","cssvar"];for(var attr in data)blacklist.includes(attr.toLowerCase())||(attributes+=` ${attr}="${data[attr]}"`);return attributes},getKnobDataByName(name){return this.settings.knobs.filter(Boolean).find((d=>d.__name==name))},getInputByName(name){return this.DOM.scope.querySelector(`input[name="${name}"`)},onChange(e){var updatedData,knobData=this.getKnobDataByName(e.target.name),runOnInput="input"==e.type&&knobData&&"range"!=knobData.type,isCheckbox=knobData&&"checkbox"==knobData.type;knobData&&(isCheckbox||this.settings.live)&&("input"==e.type&&runOnInput||(updatedData={...knobData,value:e.target.value},raf((()=>this.updateDOM(updatedData))),"function"==typeof knobData.onChange&&knobData.onChange(e,updatedData)))},updateDOM({cssVar:cssVar,value:value,type:type,__name:name}){if(cssVar&&cssVar.length){var[cssVarName,cssVarUnit,CSSVarTarget]=cssVar,targetElm=CSSVarTarget||this.settings.CSSVarTarget,knobInput=this.getInputByName(name),action="setProperty";"checkbox"!=type||knobInput.checked||(action="removeProperty"),targetElm&&void 0!==value&&cssVarName&&targetElm.style[action]("--"+cssVarName,value+(cssVarUnit||""))}},resetAll(knobsData){(knobsData||this.settings.knobs).forEach((d=>{if(d&&d.type){var isCheckbox="checkbox"==d.type,isRange="range"==d.type,e={target:{value:d.value,name:d.__name}},inputElm=this.getInputByName(d.__name);isCheckbox?inputElm.checked=!!d.checked:inputElm.value=d.value,isRange&&inputElm.parentNode.style.setProperty("--value",d.value),this.onChange(e)}}))},resetKnobByName(name){this.resetAll([this.getKnobDataByName(name)])},generateIds(){this.settings.knobs.forEach((knobData=>{knobData&&knobData.type&&(knobData.__name=knobData.label.replace("/ /g","-")+Math.random().toString(36).slice(-6))}))},onSubmit(e){e.preventDefault();var elements=[...e.target.elements];return this.settings.live=!0,elements.forEach((elm=>this.onChange({target:{value:elm.value,name:elm.name}}))),this.settings.live=!1,!1},onClick(e){var n,target=e.target;n="knobs__knob__reset",target.classList.contains(n)&&this.resetKnobByName(target.name)},toggle(state){void 0===state&&(state=!this.DOM.mainToggler.checked);var action=(state?"set":"remove")+"Property",{clientWidth:clientWidth,clientHeight:clientHeight}=this.DOM.scope;this.DOM.iframe.style[action]("--knobsWidth",clientWidth+"px"),this.DOM.iframe.style[action]("--knobsHeight",clientHeight+"px"),this.DOM.mainToggler.checkd=state},build(){var iframeDoc,theme=this.settings.theme;if(this.settings.knobs&&this.settings.knobs.length){this.generateIds(),this.bindedEvents={onChange:this.onChange.bind(this),onReset:this.resetAll.bind(this,null),onSubmit:this.onSubmit.bind(this),onClick:this.onClick.bind(this)};var{onChange:onChange,onReset:onReset,onSubmit:onSubmit,onClick:onClick}=this.bindedEvents;this.DOM.iframe=document.createElement("iframe"),this.DOM.iframe.setAttribute("class","knobsIframe"),this.DOM.iframe.style.cssText=`\n          border: none;\n          position: fixed;\n          z-index: 999999;\n          ${(theme.position+" ").split(" ").join(":0;")}\n          width: var(--knobsWidth, 35px);\n          height: var(--knobsHeight, 30px);\n      `,this.settings.appendTo.appendChild(this.DOM.iframe),(iframeDoc=this.DOM.iframe.contentWindow.document).open(),iframeDoc.write(this.templates.scope.call(this)),iframeDoc.head.insertAdjacentHTML("beforeend",`<style>${this.styles()}</style>`),iframeDoc.close(),this.DOM.scope=iframeDoc.body.firstElementChild,this.DOM.form=this.DOM.scope.querySelector("form"),this.DOM.mainToggler=iframeDoc.getElementById("knobsToggle"),this.DOM.form.addEventListener("change",onChange),this.DOM.form.addEventListener("input",onChange),this.DOM.form.addEventListener("reset",onReset),this.DOM.form.addEventListener("submit",onSubmit),this.DOM.scope.addEventListener("click",onClick),this.DOM.mainToggler.addEventListener("change",(e=>this.toggle(e.target.checked))),this.toggle(this.DOM.mainToggler.checked),this.resetAll()}}},Knobs}));