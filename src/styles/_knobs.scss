#knobsToggle{
  // main toggle button
  + label{
    position: absolute;
    width: 26px;
    height: 20px;
    top: 6px;
    right: 6px;
    font-size: 20px;
    line-height: 1;
    z-index: 1; // enough to make sure slider's output value is over the icon and not under
  }

  &:checked{
    & ~ .knobs__labels {
      transform: none;
      transition: calc(var(--in-duration) * 1s) var(--in-easing);

      fieldset, .knobs__controls {
        transform: none;
        opacity: 1;
        transition: calc(var(--in-duration) * 1s) calc(var(--in-duration) * .5s) ease-out;
      }
    }
  }
}

.knobs {
  --knobs-gap: 3px;
  --side-pad: 12px;
  --in-easing: cubic-bezier(.75,0,.35,1);
  --in-duration: .3;
  --color-size: 20px;
  --LTR-Bool: 1;  /* -1 for RTL */

  font: 12px/1 'Fira Sans Condensed', sans-serif;
  color: var(--textColor);
  position: fixed;
  z-index: 999999;
  top: 0;
  right: 0;

  &[data-flow='compact']{
    --color-size: 16px;

    label[data-type='range']{
      flex-flow: column;

      & ~ .knobs__knob__reset{
    //  /   margin-bottom: calc(var(--knobs-gap, 6px) * 2);
        align-self: flex-start;
      }

      .knobs__label{
        margin: 0;
        padding: 0;
      }
    }
  }

  label {
    user-select: none;
    cursor: pointer;
  }

  /* the <form> element which is the actual knobs wrapper */
  &__labels {
    background: var(--background);
    border: var(--border);
    transform: translateX(calc(100.1% * var(--LTR-Bool)));
    overflow: hidden;

    fieldset {
      display: table;
      border: 0;
      padding: 0;
      margin: var(--side-pad);
      opacity: 0;
      transform: translateX(calc(22% * var(--LTR-Bool)));
      overflow: hidden;
    }

    .fieldset__group{
      transition: .33s cubic-bezier(.45, 0, .2, 1);
    }

    hr{
      border: 0;
      border-top: 1px solid var(--textColor);
      opacity: .25;

      &:last-of-type{
        margin-bottom: 0;
      }
    }

    label {
      order: 5;
      flex: 1;
      display: flex;
      position: relative;
      z-index: 1;
      background: var(--background);

      > * {
        padding: var(--knobs-gap, 6px) 0;
      }
    }

    & .range,
    & input[type=text] {
      min-width: 200px;
    }

    & label > :last-child {
      flex: 1;
      text-align: right;
    }
  }

  &__legend{
    $lineGap: 2ch;

    display: flex;
    align-items: center;
    margin: 0 0 var(--side-pad);
    font-weight: 700;
    opacity: .66;
    cursor: pointer;
    transition: .2s cubic-bezier(.45, 0, .2, 1);

    &::before,
    &::after{
      content: '';
      height: 1px;
      background: var(--textColor);
      flex: 1;
      opacity: .5;
      transition: inherit;
    }

    &::before{ margin-right: $lineGap; }
    &::after{ margin-left: $lineGap; }

    &:hover{
      opacity: .85;
      &::before{ margin-right: $lineGap * 3;  }
      &::after{ margin-left: $lineGap * 3;  }
    }
  }

  &__knob{
    $self: &;
    display: flex;
    position: relative;

    &:hover{
      #{$self}__reset{
        // transform: none;
      }

      #{$self}__label{
        opacity: 1;
      }
    }

    // only show the "rest" button if knob has changed.
    // this allows the user to know which one was changed, where many knobs exist
    &[data-changed]{
      #{$self}__reset{
        opacity: .75;
        pointer-events: auto;

        &:hover{
          opacity: 1;
          background: var(--textColor);
          color: var(--background);
          transition: 0s;
        }
      }
    }

    &__reset{
      order: 0;
      pointer-events: none;
      margin-right: .5em;
      padding: 0;
      align-self: center;
      color: inherit;
      background: none;
      border: 0;
      cursor: pointer;
      opacity: .33;
      outline: none;
      border-radius: 50%;
      width: 2ch;
      height: 2ch;
      transition: .15s ease-out;
    }

    &__label {
      margin-right: 2ch;
      white-space: nowrap;
      display: flex;
      align-items: center;
      opacity: .8;
      transition: 80ms;

      // variable units (if exists)
      &::after{
        content: attr(data-type);
        opacity: .5;
        margin-left: 1ch;
      }
    }
  }

  .toggleSection{
    &:not(:checked){
      ~ .fieldset__group{
        opacity: 0;
        margin-top: calc(-1em + var(--height) * -1px);
        text-shadow: 0px 3px 2px;
      }
    }
  }
}
